---

- name: Base AWS Config
  hosts: vpc
  connection: local
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
    AWS_REGION: "{{ aws_region }}"
  roles:
    - role: aws-bootstrap
  tasks:
    - name: Refresh inventory
      ansible.builtin.meta: refresh_inventory

# satellite post-provisioning
- name: Install/configure satellite
  hosts: satellite
  environment:
    SATELLITE_USERNAME: "{{ satellite_admin_username }}"
    SATELLITE_PASSWORD: "{{ satellite_admin_password }}"
    SATELLITE_SERVER_URL: "https://{{ inventory_hostname }}"
    SATELLITE_VALIDATE_CERTS: false
  vars:
    - vpc_subnet_id: "{{ hostvars['vpc-ansibled']['vpc_subnet_id'] }}"
    - vpc_security_groups: "{{ hostvars['vpc-ansibled']['returned_security_groups'] | json_query('results[*].group_id') }}"
  remote_user: ec2-user
  become: true
  gather_facts: false

  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      ansible.builtin.wait_for_connection:

    - name: RHEL common plays
      ansible.builtin.import_role:
        name: rhel-common

    - name: Gather facts now that we've installed python
      ansible.builtin.setup:

    - name: Satellite install prereqs
      ansible.builtin.import_role:
        name: satellite-preinstall

    # get service facts so we can run satellite installer dynamically
    - name: Gather service facts
      ansible.builtin.service_facts:

    # using import role so we can skip if foreman is always running
    # the redhat.satellite_operations.installer is idempotent, but takes forever even after initial installation
    - name: Run satellite installer
      ansible.builtin.import_role:
        name: redhat.satellite_operations.installer
      vars:
        satellite_installer_scenario: satellite
        satellite_installer_options:
          - "--foreman-initial-admin-username {{ satellite_admin_username }}"
          - "--foreman-initial-admin-password {{ satellite_admin_password }}"
      when: ansible_facts.services["foreman.service"].state != "running"

    # post-installation steps
    - name: Satellite post-installation configuration
      ansible.builtin.import_role:
        name: satellite-postinstall
      vars:
        - desired_ami_id: "{{ hostvars['vpc-ansibled']['desired_ami_id'] }}"

# bind post-provisioning
- name: Install/configure bind
  hosts: dnsservers
  remote_user: ec2-user
  become: true
  gather_facts: false

  tasks:
    - name: Wait 600 seconds for target connection to become reachable/usable
      ansible.builtin.wait_for_connection:

    - name: RHEL common plays
      ansible.builtin.import_role:
        name: rhel-common

    - name: Stand up bind server
      ansible.builtin.import_role:
        name: bind-server
