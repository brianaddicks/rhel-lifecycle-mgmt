# Workflow name
name: Update AH Token

# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      AH_TOKEN:
        description: 'Red Hat Ansible Automation Hub Token'
        default: ''
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'just one tag for image build'
        default: 'latest'
        required: true
        type: string
    secrets:
      REDHAT_PASSWORD:
        description: 'needed for registry login'
        required: false
      REDHAT_USERNAME:
        description: 'needed for registry login'
        required: false
      QUAY_USERNAME:
        description: 'needed for quay login'
        required: false
      QUAY_PASSWORD:
        description: 'needed for quay login'
        required: false
      AH_TOKEN:
        description: 'API token for hosted automation hub'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Log in to quay.io
        id: registry-quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Log in to registry.redhat.io
        id: registry-redhat
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: substitute token for automation hub
        id: ah-token
        run: |
          sed -i "s/my_ah_token/$AH_TOKEN/1" ansible.cfg
          cat ansible.cfg
        env:
          AH_TOKEN: ${{ secrets.AH_TOKEN }}

      - name: Build image
        id: build-image
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          ansible-builder build \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}
#         env:
#           ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN: ${{ secrets.AH_TOKEN }}
# Above env var doesn't work yet: https://github.com/ansible/ansible-builder/issues/346

      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ inputs.EE_FOLDER_NAME }}
          tags: |
            ${{ inputs.EE_IMAGE_TAG }}
            ${{ github.sha }}
          registry: quay.io/${{ secrets.QUAY_USERNAME }}/
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Print summary
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Image pushed to repository: [${{ steps.push-to-quay.outputs.registry-path }}](https://${{ steps.push-to-quay.outputs.registry-path }})" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ steps.push-to-quay.outputs.registry-path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull quay.io/${{ secrets.QUAY_USERNAME }}/${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible --version`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible-galaxy collection list`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`cat context/Containerfile`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY